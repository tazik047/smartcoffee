//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartQueue.BLL.IoT.CoffeeMachine {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/SmartCoffeeMachine")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoffeeMachineAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CoffeeMachineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SmartQueue.BLL.IoT.CoffeeMachine.DrinkType DrinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SmartQueue.BLL.IoT.CoffeeMachine.Size SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SugarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoffeeMachineAddress {
            get {
                return this.CoffeeMachineAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CoffeeMachineAddressField, value) != true)) {
                    this.CoffeeMachineAddressField = value;
                    this.RaisePropertyChanged("CoffeeMachineAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CoffeeMachineId {
            get {
                return this.CoffeeMachineIdField;
            }
            set {
                if ((this.CoffeeMachineIdField.Equals(value) != true)) {
                    this.CoffeeMachineIdField = value;
                    this.RaisePropertyChanged("CoffeeMachineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartQueue.BLL.IoT.CoffeeMachine.DrinkType Drink {
            get {
                return this.DrinkField;
            }
            set {
                if ((this.DrinkField.Equals(value) != true)) {
                    this.DrinkField = value;
                    this.RaisePropertyChanged("Drink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SmartQueue.BLL.IoT.CoffeeMachine.Size Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sugar {
            get {
                return this.SugarField;
            }
            set {
                if ((this.SugarField.Equals(value) != true)) {
                    this.SugarField = value;
                    this.RaisePropertyChanged("Sugar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrinkType", Namespace="http://schemas.datacontract.org/2004/07/SmartCoffeeMachine")]
    public enum DrinkType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Coffee = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tea = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Size", Namespace="http://schemas.datacontract.org/2004/07/SmartCoffeeMachine")]
    public enum Size : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Smalle = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medium = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Large = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueItem", Namespace="http://schemas.datacontract.org/2004/07/SmartCoffeeMachine")]
    [System.SerializableAttribute()]
    public partial class QueueItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondsToEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondsToEnd {
            get {
                return this.SecondsToEndField;
            }
            set {
                if ((this.SecondsToEndField.Equals(value) != true)) {
                    this.SecondsToEndField = value;
                    this.RaisePropertyChanged("SecondsToEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IoT.CoffeeMachine.ICoffeeMachine")]
    public interface ICoffeeMachine {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeMachine/MakeDrink", ReplyAction="http://tempuri.org/ICoffeeMachine/MakeDrinkResponse")]
        void MakeDrink(SmartQueue.BLL.IoT.CoffeeMachine.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeMachine/MakeDrink", ReplyAction="http://tempuri.org/ICoffeeMachine/MakeDrinkResponse")]
        System.Threading.Tasks.Task MakeDrinkAsync(SmartQueue.BLL.IoT.CoffeeMachine.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeMachine/WaitFor", ReplyAction="http://tempuri.org/ICoffeeMachine/WaitForResponse")]
        SmartQueue.BLL.IoT.CoffeeMachine.QueueItem WaitFor(long coffeeMachineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICoffeeMachine/WaitFor", ReplyAction="http://tempuri.org/ICoffeeMachine/WaitForResponse")]
        System.Threading.Tasks.Task<SmartQueue.BLL.IoT.CoffeeMachine.QueueItem> WaitForAsync(long coffeeMachineId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICoffeeMachineChannel : SmartQueue.BLL.IoT.CoffeeMachine.ICoffeeMachine, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoffeeMachineClient : System.ServiceModel.ClientBase<SmartQueue.BLL.IoT.CoffeeMachine.ICoffeeMachine>, SmartQueue.BLL.IoT.CoffeeMachine.ICoffeeMachine {
        
        public CoffeeMachineClient() {
        }
        
        public CoffeeMachineClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoffeeMachineClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoffeeMachineClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoffeeMachineClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void MakeDrink(SmartQueue.BLL.IoT.CoffeeMachine.Order order) {
            base.Channel.MakeDrink(order);
        }
        
        public System.Threading.Tasks.Task MakeDrinkAsync(SmartQueue.BLL.IoT.CoffeeMachine.Order order) {
            return base.Channel.MakeDrinkAsync(order);
        }
        
        public SmartQueue.BLL.IoT.CoffeeMachine.QueueItem WaitFor(long coffeeMachineId) {
            return base.Channel.WaitFor(coffeeMachineId);
        }
        
        public System.Threading.Tasks.Task<SmartQueue.BLL.IoT.CoffeeMachine.QueueItem> WaitForAsync(long coffeeMachineId) {
            return base.Channel.WaitForAsync(coffeeMachineId);
        }
    }
}
